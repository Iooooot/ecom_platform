<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.db.ecom_platform.mapper.OrderItemMapper">
    
    <!-- 根据订单ID查询订单项列表 -->
    <select id="selectByOrderId" resultType="com.db.ecom_platform.entity.OrderItem">
        SELECT * FROM order_items WHERE order_id = #{orderId}
    </select>
    
    <!-- 批量插入订单项 -->
    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO order_items (
            order_id, product_id, product_name, product_image, 
            price, quantity, subtotal, create_time
        ) VALUES 
        <foreach collection="orderItems" item="item" separator=",">
            (
                #{item.orderId}, #{item.productId}, #{item.productName}, #{item.productImage}, 
                #{item.price}, #{item.quantity}, #{item.subtotal}, #{item.createTime}
            )
        </foreach>
    </insert>
    
    <!-- 获取指定时间范围内的热销商品 -->
    <select id="getHotProductsInTimeRange" resultType="java.util.Map">
        SELECT 
            oi.product_id AS productId,
            p.name AS productName,
            p.category_id AS categoryId,
            p.category_name AS categoryName,
            SUM(oi.quantity) AS salesCount,
            SUM(oi.subtotal) AS salesAmount
        FROM order_items oi
        JOIN orders o ON oi.order_id = o.order_id
        LEFT JOIN products p ON oi.product_id = p.product_id
        WHERE o.create_time BETWEEN #{startTime} AND #{endTime}
        AND o.status IN (1, 2, 3) /* 已支付、已发货、已完成 */
        GROUP BY oi.product_id, oi.product_name, p.category_id, p.category_name
        ORDER BY salesCount DESC
        LIMIT #{limit}
    </select>
    
    <!-- 获取指定时间范围内按分类统计的销售数据 -->
    <select id="getSalesByCategoryInTimeRange" resultType="java.util.Map">
        SELECT 
            p.category_id AS categoryId,
            p.category_name AS categoryName,
            SUM(oi.quantity) AS salesCount,
            SUM(oi.subtotal) AS salesAmount
        FROM order_items oi
        JOIN orders o ON oi.order_id = o.order_id
        LEFT JOIN products p ON oi.product_id = p.product_id
        WHERE o.create_time BETWEEN #{startTime} AND #{endTime}
        AND o.status IN (1, 2, 3) /* 已支付、已发货、已完成 */
        GROUP BY p.category_id, p.category_name
        ORDER BY salesAmount DESC
    </select>
    
    <!-- 根据订单ID列表获取订单项 -->
    <select id="getOrderItemsByOrderIds" resultType="com.db.ecom_platform.entity.OrderItem">
        SELECT * FROM order_items 
        WHERE order_id IN
        <foreach collection="orderIds" item="orderId" open="(" separator="," close=")">
            #{orderId}
        </foreach>
    </select>
    
</mapper> 