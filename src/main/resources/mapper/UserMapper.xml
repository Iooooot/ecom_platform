<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.db.ecom_platform.mapper.UserMapper">
    <!-- 根据用户名查询用户 -->
    <select id="getUserByUsername" resultType="com.db.ecom_platform.entity.User">
        SELECT * FROM users WHERE username = #{username}
    </select>
    
    <!-- 根据邮箱查询用户 -->
    <select id="getUserByEmail" resultType="com.db.ecom_platform.entity.User">
        SELECT * FROM users WHERE email = #{email}
    </select>
    
    <!-- 根据手机号查询用户 -->
    <select id="getUserByPhone" resultType="com.db.ecom_platform.entity.User">
        SELECT * FROM users WHERE phone = #{phone}
    </select>
    
    <!-- 更新用户信息 -->
    <update id="updateUserInfo" parameterType="com.db.ecom_platform.entity.User">
        UPDATE users
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="email != null">email = #{email},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="age != null">age = #{age},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="isVip != null">is_vip = #{isVip},</if>
            update_time = NOW()
        </set>
        WHERE user_id = #{userId}
    </update>
    
    <!-- 更新密码 -->
    <update id="updatePassword">
        UPDATE users SET password = #{newPassword}, update_time = NOW()
        WHERE user_id = #{userId}
    </update>
    
    <!-- 获取用户消费总额 -->
    <select id="getUserTotalConsumption" resultType="java.lang.Double">
        SELECT SUM(total_amount) 
        FROM orders 
        WHERE user = #{userId}
        <if test="createTime != null">
            AND create_time >= #{createTime}
        </if>
    </select>
    
    <!-- 获取用户订单数量 -->
    <select id="getUserOrderCount" resultType="java.lang.Integer">
        SELECT COUNT(*) 
        FROM orders 
        WHERE user = #{userId}
        <if test="createTime != null">
            AND create_time >= #{createTime}
        </if>
    </select>
    
    <!-- 获取用户平均消费金额 -->
    <select id="getUserAvgConsumption" resultType="java.lang.Double">
        SELECT AVG(total_amount) 
        FROM orders 
        WHERE user = #{userId}
        <if test="createTime != null">
            AND create_time >= #{createTime}
        </if>
    </select>
    
    <!-- 获取用户消费排名 -->
    <select id="getUserConsumptionRank" resultType="java.lang.Integer">
        SELECT user_rank
        FROM (
            SELECT 
                user, 
                SUM(total_amount) AS total_consumption, 
                DENSE_RANK() OVER (ORDER BY SUM(total_amount) DESC) AS user_rank
            FROM 
                orders
            WHERE 
                create_time BETWEEN #{startTime} AND #{endTime}
            GROUP BY 
                user
        ) AS ranked_users
        WHERE user = #{userId}
    </select>
    
    <!-- 获取有消费记录的总用户数 -->
    <select id="getTotalConsumptionUsers" resultType="java.lang.Integer">
        SELECT COUNT(DISTINCT user) 
        FROM orders
        WHERE create_time BETWEEN #{startTime} AND #{endTime}
    </select>
    
    <!-- 获取最高消费金额 -->
    <select id="getMaxConsumptionAmount" resultType="java.lang.Double">
        SELECT MAX(user_total)
        FROM (
            SELECT 
                user, 
                SUM(total_amount) AS user_total
            FROM 
                orders
            WHERE 
                create_time BETWEEN #{startTime} AND #{endTime}
            GROUP BY 
                user
        ) AS user_totals
    </select>
    
    <!-- 获取平均消费金额（所有用户） -->
    <select id="getAvgConsumptionAmount" resultType="java.lang.Double">
        SELECT AVG(user_total)
        FROM (
            SELECT 
                user, 
                SUM(total_amount) AS user_total
            FROM 
                orders
            WHERE 
                create_time BETWEEN #{startTime} AND #{endTime}
            GROUP BY 
                user
        ) AS user_totals
    </select>
    
    <!-- 查询消费统计 -->
    <select id="getConsumptionStats" resultType="com.db.ecom_platform.entity.ConsumptionStat">
        SELECT 
            COUNT(o.order_id) AS orderCount,
            SUM(o.total_amount) AS totalAmount
        FROM 
            orders o
        WHERE 
            o.user = #{userId}
            AND o.create_time BETWEEN #{startTime} AND #{endTime}
    </select>
    
    <!-- 查询消费趋势 -->
    <select id="getConsumptionTrend" resultType="java.util.Map">
        SELECT 
            DATE_FORMAT(o.create_time, 
                <choose>
                    <when test="timeUnit == 'day'">'%Y-%m-%d'</when>
                    <when test="timeUnit == 'week'">'%Y-%u'</when>
                    <when test="timeUnit == 'month'">'%Y-%m'</when>
                </choose>
            ) AS timePoint,
            SUM(o.total_amount) AS amount,
            COUNT(o.order_id) AS count
        FROM 
            orders o
        WHERE 
            o.user = #{userId}
            AND o.create_time BETWEEN #{startTime} AND #{endTime}
        GROUP BY 
            timePoint
        ORDER BY 
            timePoint
    </select>
    
    <!-- 查询分类消费 -->
    <select id="getCategoryConsumption" resultType="java.util.Map">
        SELECT 
            c.name AS category,
            SUM(oi.price * oi.quantity) AS amount
        FROM 
            orders o
            JOIN order_items oi ON o.order_id = oi.order_id
            JOIN products p ON oi.product_id = p.product_id
            JOIN categories c ON p.category_id = c.category_id
        WHERE 
            o.user = #{userId}
            AND o.create_time BETWEEN #{startTime} AND #{endTime}
        GROUP BY 
            c.category_id, c.name
    </select>
    
    <!-- 自定义分页查询用户列表 -->
    <select id="getUserListPage" resultType="com.db.ecom_platform.entity.User">
        SELECT user_id, username, email, phone, age, gender, is_vip, create_time, update_time, 
               role, is_disabled, wx_open_id, alipay_id, last_login_time, last_login_ip, 
               login_count, avatar_url, bio, status
        FROM users
        <where>
            <if test="query.username != null and query.username != ''">
                AND username LIKE CONCAT('%', #{query.username}, '%')
            </if>
            <if test="query.email != null and query.email != ''">
                AND email LIKE CONCAT('%', #{query.email}, '%')
            </if>
            <if test="query.phone != null and query.phone != ''">
                AND phone LIKE CONCAT('%', #{query.phone}, '%')
            </if>
            <if test="query.isVip != null">
                AND is_vip = #{query.isVip}
            </if>
            <if test="query.role != null">
                AND role = #{query.role}
            </if>
            <if test="query.isDisabled != null">
                AND is_disabled = #{query.isDisabled}
            </if>
            <if test="query.createTime != null and query.createTime != ''">
                AND create_time >= #{query.createTime}
            </if>
        </where>
        ORDER BY create_time DESC
    </select>
</mapper> 